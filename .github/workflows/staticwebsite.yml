# This is a basic workflow to help you get started with Actions

name: web

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    paths:
      - 'oving8/web/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    #inputs:
    #  action_type:
    #    description: 'What action should be performed? (Apply/Destroy)'
    #    required: true
    #    default: 'apply'
    #    type: choice
    #    options:
    #    - 'apply'
    #    - 'destroy'

jobs:
  # This workflow contains a single job called "terraform"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    
    name: 'web'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./oving8/web

    steps:
      - uses: actions/checkout@v4.1.1

      - name: 'Terraform init'
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform plan'
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Check last commit message'
        id: commit
        run: |
          echo "message=$(git log --format=%B -n 1)" >> $GITHUB_OUTPUT
      - name: 'Conditionally run Terraform'
        run: |
          if [[ "${{steps.commit.outputs.message }}" == *"destroy"* ]]. then
          terraform destroy -auto-approve
          else
          terraform apply auto-approve
          fi
      #kommenteres ut, da manuell godkjenning vanligvis ikke trengs for "ikke-prod"
      #- name: 'Conditionally run Terraform action'
      #  run: |
      #    if [[ "${{ steps.commit.outputs.message }}" == *"destroy"* ]]; then
      #      terraform destroy -auto-approve
      #    else
      #      terraform apply -auto-approve
      #    fi
      #  working-directory: ${{ env.WORKING_DIR }}
